{
	"info": {
		"_postman_id": "dd84e36b-f3ff-475a-968c-6182ae5d93ee",
		"name": "SimpleBookAPI>>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1 sec\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"let response = pm.response.json();",
							"console.log(response);",
							"console.log(response.status);",
							"console.log(response['status']);",
							"",
							"pm.test(\"Status should be OK\", () => {",
							"    pm.expect(response.status).to.eql(\"OK\");",
							"});",
							"",
							"",
							"pm.test(\"How to compare - should be OK\", () => {",
							"    pm.expect(1).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{simpleBookURL}}status",
					"host": [
						"{{simpleBookURL}}status"
					]
				}
			},
			"response": []
		},
		{
			"name": "List of Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"//------------------------",
							"",
							"let response = pm.response.json();",
							"let nonFictionBooks = response.filter((book) => book.available === true);",
							"",
							"pm.globals.set(\"bookId\", nonFictionBooks[0].id);",
							"",
							"console.log(nonFictionBooks[0])",
							"",
							"postman.setNextRequest('Single Book'); // set order of execution",
							"//postman.setNextRequest(null);  // to stop collection from executing here "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{simpleBookURL}}books?type=non-fiction",
					"host": [
						"{{simpleBookURL}}books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						},
						{
							"key": "limit",
							"value": "@%23$",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List of Books Test2.0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"//------------------------",
							"",
							"let response = pm.response.json();",
							"let nonFictionBooks = response.filter((book) => book.available === true);",
							"",
							"let book = nonFictionBooks[0];",
							"if(book) {",
							"    pm.globals.set(\"bookId\", book.id);// set global variable ",
							"}",
							"// -- error handling part --",
							"pm.test(\"Book found\", () => {",
							"    pm.expect(book).to.be.an('object');",
							"    pm.expect(book.available).to.be.true;",
							"    pm.expect(book.type).to.eql(\"non-fiction\");",
							"});",
							"",
							"console.log(book.type);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{simpleBookURL}}books?type=non-fiction",
					"host": [
						"{{simpleBookURL}}books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						},
						{
							"key": "limit",
							"value": "@%23$",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let response = pm.response.json();",
							"console.log(response);",
							"",
							"",
							"pm.test(\"Current stock \", () => {",
							"    pm.expect(response[\"current-stock\"]).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{simpleBookURL}}books/:bookld",
					"host": [
						"{{simpleBookURL}}books"
					],
					"path": [
						":bookld"
					],
					"variable": [
						{
							"key": "bookld",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"tokenSimpleBooks\", jsonData.accessToken);",
							"",
							"pm.test(\"Status code is 201 - Created\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clientName\":\"{{$randomFullName\",\n    \"clientEmail\":\"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}api-clients",
					"host": [
						"{{simpleBookURL}}api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 - Created\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"orderId\", jsonData.orderId);",
							"",
							"console.log(jsonData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenSimpleBooks}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"bookId\":{{bookId}},\n    \"customerName\":\"{{$randomFullName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}orders",
					"host": [
						"{{simpleBookURL}}orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenSimpleBooks}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}orders",
					"host": [
						"{{simpleBookURL}}orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenSimpleBooks}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}orders/:orderId",
					"host": [
						"{{simpleBookURL}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 - No content\", () => {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenSimpleBooks}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"customerName\":\"Aslan Gedgafov\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}orders/:orderId",
					"host": [
						"{{simpleBookURL}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 - No content\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenSimpleBooks}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{simpleBookURL}}orders/:orderId",
					"host": [
						"{{simpleBookURL}}orders"
					],
					"path": [
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "simpleBookURL",
			"value": "https://simple-books-api.glitch.me/"
		},
		{
			"key": "accessToken",
			"value": "------"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}